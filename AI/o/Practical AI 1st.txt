//--------------------------BFS----------------------------
graph = {
    '5': ['3', '7'],
    '3': ['2', '4'],
    '7': ['8'],
    '2': [],
    '4': ['8'],
    '8': []
}

visited = []
queue = []

def bfs(visited, graph, stNode):
    visited.append(stNode)
    queue.append(stNode)
    
    while queue:
        m = queue.pop(0)
        print(m, end = " ")
        
        for neigh in graph[m]:
            if neigh not in visited:
                visited.append(neigh)
                queue.append(neigh)
                
                
print("BFS ")
bfs(visited, graph, "5")
//--------------------------BFS----------------------------

//--------------------------DFS----------------------------
graph = {
    '5': ['3', '7'],
    '3' : ['2', '4'],
    '7' : ['8'],
    '2' : [],
    '4' : ['8'],
    '8' : []
}

visited = set()

def dfs(visited, graph, node):
    if node not in visited:
        print(node)
        visited.add(node)
        
        for i in graph[node]:
            dfs(visited, graph, i)
            
print("dfs: ")
dfs(visited, graph, "5")
//--------------------------DFS----------------------------